
<!-- ant reg  builds application war for regular mode --> 
<!-- ant sim  builds application war for simulation  mode -->
<!-- ant local  builds application war for local development  windows desktop mode -->
<!-- ant local-exp  builds application  and deploys expanded war for local development  windows desktop mode -->


<project name="videovisitmember" basedir="." default="local-exp">
    <property file="${basedir}/build.properties" />
    <property name="src.dir" value="src" />
    <property name="conf.dir" value="conf" />
    <property name="docroot.dir" value="docroot" />
    <property name="dest.dir" value="build/${ant.project.name}" />
	<property name="dest.war.dir" value="build/war" />
    <property name="dir.lib" value="${basedir}/lib" />
    <property name="dest.dir.classes" value="${dest.dir}/WEB-INF/classes" />
	<property name="dest.dir.lib" value="${dest.dir}/WEB-INF/lib" />
	<property name="dest.dir.vidyoplayer" value="${dest.dir}/vidyoplayer" />
	<property name="vidyoplayer.home" value="${vidyoplayer_location}"/>
 	
    <!-- 
	<taskdef name="jsmin"
		        classname="net.matthaynes.jsmin.JSMin_Task"
		        classpath="${dir.lib}/jsmin.0.2.3.jar"/>
	-->	        
		        
	
   <path id="build.class.path">
      <fileset dir="${dir.lib}">
         <include name="*.jar" />
      </fileset>
   	</path>
  <!--
   <target name="sim">
	  <property name="ffile" value="conf/filters/local" />
      <property file="${ffile}" />
      <echo message="using filter -> ${ffile}" />
      <antcall target="clean" />
      <antcall target="prepare" />
      <antcall target="compile" />
   	  <antcall target="build-war" />
   	  <antcall target="copy-war" />
   </target>
	-->
	<target name="reg">
		  <property name="ffile" value="conf/filters/reg" />
	      <property file="${ffile}" />
	      <echo message="using filter -> ${ffile}" />
	      <antcall target="clean" />
	      <antcall target="prepare" />
	      <antcall target="compile" />
	   	  <antcall target="build-war" />
	   	  <antcall target="copy-war" />
	   </target>
	
	<target name="local">
		<antcall target="assemble" />
	  	<antcall target="build-war" />
   	  	<antcall target="copy-war" />
   </target>
	<target name="generateWar">
			<antcall target="assemble" />
		  	<antcall target="build-war" />
	</target>
	
	<target name="local-exp">
			<antcall target="assemble" />
		  	<antcall target="build-war" />
	   	  	<antcall target="copy-exp-war" />
	   </target>
	
	<target name="local-exp-no-ws">
			<antcall target="assemble-no-ws" />
		  	<antcall target="build-war" />
	   	  	<antcall target="copy-exp-war" />
	   </target>
	
	<target name="assemble">
		  <property name="ffile" value="conf/filters/${build.env}/configuration.properties" />
	      <property file="${ffile}" />
	      <echo message="using filter -> ${ffile}" />
	      <antcall target="clean" />
		  <antcall target="build-webservice"></antcall>
	      <antcall target="prepare" />
	      <antcall target="compile" />
   </target>
	
	<target name="assemble-no-ws">
		  <property name="ffile" value="conf/filters/local" />
	      <property file="${ffile}" />
	      <echo message="using filter -> ${ffile}" />
	      <antcall target="clean" />
	      <antcall target="prepare" />
	      <antcall target="compile" />
   </target>
	
   <target name="clean">
      <delete dir="${dest.dir}" />
   	</target>

   <target name="prepare">
   	 <filter filtersfile="${ffile}" />
     <mkdir dir="${dest.dir}" />
   	 <mkdir dir="${dest.war.dir}" />
     <mkdir dir="${dest.dir.classes}" />
   	 <mkdir dir="${dest.dir.lib}" />
   	 <mkdir dir="${dest.dir.vidyoplayer}"/>
   	 <copy file="${conf.dir}/log4j.properties"
   	            todir="${dest.dir.classes}"
   	            filtering="true" />
   	 <copy file="${conf.dir}/project.init.properties"
   	   	            todir="${dest.dir.classes}"
   	   	            filtering="true" />
   	 <copy file="${ffile}"
		tofile="${conf.dir}/configuration.properties"
 		filtering="true" />
   	 <copy file="${conf.dir}/configuration.properties"
   	   	            todir="${dest.dir.classes}"
   	   	            filtering="true" />
   	 <copy todir="${dest.dir.lib}">
      	         <fileset dir="${dir.lib}">
      	         	<exclude name="j2ee.jar"/>
      	         </fileset>
     </copy>
   	<!--Copy Vidyoplayer to war-->
   	<echo message="copying vidyoplayer to war from ${vidyoplayer.home}" />
   	<copy todir="${dest.dir.vidyoplayer}">
   		<fileset dir="${vidyoplayer.home}" includes="**"/>      	    
    </copy>
    <copy todir="${dest.dir}">
         	    <fileset dir="${docroot.dir}">
         	    	<exclude name="${docroot.dir}/WEB-INF/classes/*"/>
         	    	<exclude name="${docroot.dir}/js/*"/>         	    	
         	    	<exclude name="${docroot.dir}/css/*"/>         	    	
         	    	<exclude name="${docroot.dir}/images/*"/>  
         	    	<exclude name="**/deprecated/**"/>
       	    	</fileset>
         </copy>
   	<!-- Minify JavaScript files -->
   	<!--
   	<jsmin force="true">
   	       <fileset dir="${dest.dir}/assets/js/" includes="**/*.js"/>
   	</jsmin>
   	-->
   </target>
	<!-- ************************************************ -->
	<!-- Start of compile				  -->
	<!-- ************************************************ -->
   <target name="compile">
      <javac srcdir="src" 
      		destdir="${dest.dir.classes}" 
      		debug="on">

			<!-- *** LINT ***
         	<compilerarg value="-Xlint:unchecked" />
			-->
          <classpath refid="build.class.path" />
      </javac>
   	<!--
      <jar destfile="${dest.dir}/${ant.project.name}.jar">
         <fileset dir="${dest.dir.classes}" />
      </jar>
      -->
   </target>
   	<!-- ************************************************ -->
   		<!-- Start of build-war				  -->
   		<!-- ************************************************ -->
   	   <target name="build-war">
   	     	      <jar destfile="${dest.war.dir}/${ant.project.name}.war">
   	     <!--    <fileset dir="${dest.dir}">
   	            <include name="*.jar" />
   	         </fileset> -->
     	    <fileset dir="${dest.dir}"/>
   	      </jar>
   </target>
	<target name="copy-exp-war">
		<delete dir="${exp.war.target.dir}/../temp/*" failonerror="false"></delete>
		<delete dir="${exp.war.target.dir}/../work/*" failonerror="false"></delete>
		<copy todir="${exp.war.target.dir}/${webapp.name}" overwrite="true">
		         	    <fileset dir="${dest.dir}">
		       	    	</fileset>
				 </copy>
		</target>
	<target name="copy-war">
		   <echo message="delete existing files if any"/>
		   <delete dir="${war.target.dir}/${webapp.name}.war" failonerror="false"/>
		   <delete dir="${war.target.dir}/${webapp.name}"  failonerror="false"/>
		   <echo message="deleted existing contents .. copy in new contents"/>	
		   <copy file="${dest.war.dir}/${ant.project.name}.war" tofile="${war.target.dir}/${webapp.name}.war" overwrite="true" />
	</target>
	<!-- ************************************************ -->
	   		<!-- Start of deploy			  -->
	   		<!-- ************************************************ -->

	<target name="build-webservice" >	
		<ant antfile="${buildtool_location}/build-client.xml" target="deployClient" inheritall="false">
			<property name="runtime.ws.lib.dir" value="${dir.lib}" ></property>
			<property name="ws-client.jarname" value="${videovisit_member_jarname}"></property>
			<property name="ws-client.packagename" value="${videovisit_member_package_name}"></property>
			<property name="ws-client.endpoint" value="${videovisit_member_endpoint}"></property>
			<property name="ws-client.wsdlversion" value="1"></property>
			<property name="ws-client.databinding" value="adb"></property>
			<property name="wsas.home" value="${wsas_home}"></property>
		</ant>
		
		
		<echo message="-----copy jar files that web service client runtime depends-----"></echo>
		<ant antfile="${buildtool_location}/build-client.xml" target="deployDependencies" inheritall="false">
			<property name="runtime.ws.lib.dir" value="${dir.lib}" ></property>
			<property name="wsas.home" value="${wsas_home}"></property>
		</ant>
		
	</target>

</project>



