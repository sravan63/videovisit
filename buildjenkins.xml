
<!-- ant reg  builds application war for regular mode --> 
<!-- ant sim  builds application war for simulation  mode -->
<!-- ant local  builds application war for local development  windows desktop mode -->
<!-- ant local-exp  builds application  and deploys expanded war for local development  windows desktop mode -->


<project name="videovisitmember" basedir="." default="local">
   <property file="${basedir}/build.properties" />
   <property name="src.dir" value="src" />
   <property name="conf.dir" value="conf" />
   <property name="docroot.dir" value="docroot" />
   <property name="build.dir" value="build" />
   <property name="dest.dir" value="build/${ant.project.name}" />
	<property name="dest.war.dir" value="build/war" />
   <property name="dir.lib" value="${basedir}/lib" />
   <property name="dest.dir.classes" value="${dest.dir}/WEB-INF/classes" />
	<property name="dest.dir.lib" value="${dest.dir}/WEB-INF/lib" />
 	
	<taskdef resource="net/sf/antcontrib/antlib.xml">
				      <classpath>
				        <pathelement location="../ant-script-library/lib/ant-contrib/ant-contrib-1.0b3.jar"/>
				      </classpath>
		</taskdef>
	
    <!-- 
	<taskdef name="jsmin"
		        classname="net.matthaynes.jsmin.JSMin_Task"
		        classpath="${dir.lib}/jsmin.0.2.3.jar"/>
	-->	        
		        
	
   <path id="build.class.path">
      <fileset dir="${dir.lib}">
         <include name="*.jar" />
      </fileset>
   	</path>
  
	
	<target name="local">
		<sleep seconds="120"/>
		<antcall target="assemble" />
	  	<antcall target="build-war" />
		
		<if>
					<equals arg1="${build.env}" arg2="dv"/>
					<then>
		   	  			<antcall target="copy-war-dev" />
					</then>
					<else>
						<antcall target="copy-war-qa" />
					</else>
		</if>
   </target>
	
	
	
	<target name="assemble">
		  <property name="ffile" value="conf/filters/${build.env}/configuration.properties" />
	      <property file="${ffile}" />
	      <echo message="using filter -> ${ffile}" />
	      <antcall target="clean" />
		  <antcall target="build-webservice"></antcall>
	      <antcall target="prepare" />
	      <antcall target="compile" />
   </target>
	
	
	
   <target name="clean">
      <delete dir="${build.dir}" />
   	</target>

	<target name="prepare">
		<filter filtersfile="${ffile}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${dest.war.dir}" />
    	<mkdir dir="${dest.dir.classes}" />
 	 	<mkdir dir="${dest.dir.lib}" />
   	  	<copy file="${conf.dir}/log4j.properties"
   	            todir="${dest.dir.classes}"
   	            filtering="true" />
   		<copy file="${conf.dir}/project.init.properties"
   	   	            todir="${dest.dir.classes}"
   	   	            filtering="true" />
   		<echo message="======Config file=====- ${ffile}" />
	   	<copy file="${ffile}"
			todir="${dest.dir.classes}"
	 		filtering="true" />
	   	
	   	<copy todir="${dest.dir.lib}">
	      	         <fileset dir="${dir.lib}">
	      	         	<exclude name="j2ee.jar"/>
	      	         </fileset>
	       </copy>
	    <copy todir="${dest.dir}">
         	    <fileset dir="${docroot.dir}">
         	    	<exclude name="${docroot.dir}/WEB-INF/classes/*"/>
         	    	<exclude name="${docroot.dir}/js/*"/>
         	    	<exclude name="${docroot.dir}/css/*"/>
         	    	<exclude name="${docroot.dir}/images/*"/>
       	    	</fileset>
         </copy>
	   	<!-- Minify JavaScript files -->
	   	<!--
	   	<jsmin force="true">
	   	       <fileset dir="${dest.dir}/assets/js/" includes="**/*.js"/>
	   	</jsmin>
	   	-->
   </target>
	<!-- ************************************************ -->
	<!-- Start of compile				  -->
	<!-- ************************************************ -->
   <target name="compile">
      <javac srcdir="src" 
      		destdir="${dest.dir.classes}" 
      		debug="on">

			<!-- *** LINT ***
         	<compilerarg value="-Xlint:unchecked" />
			-->
          <classpath refid="build.class.path" />
      </javac>
   	<!--
      <jar destfile="${dest.dir}/${ant.project.name}.jar">
         <fileset dir="${dest.dir.classes}" />
      </jar>
      -->
   </target>
   	<!-- ************************************************ -->
   		<!-- Start of build-war				  -->
   		<!-- ************************************************ -->
   	   <target name="build-war">
   	     	      <jar destfile="${dest.war.dir}/${ant.project.name}.war">
   	     <!--    <fileset dir="${dest.dir}">
   	            <include name="*.jar" />
   	         </fileset> -->
     	    <fileset dir="${dest.dir}"/>
   	      </jar>
   </target>
	<target name="copy-exp-war">
		<delete dir="${exp.war.target.dir}/../temp/*" failonerror="false"></delete>
		<delete dir="${exp.war.target.dir}/../work/*" failonerror="false"></delete>
		<copy todir="${exp.war.target.dir}/${webapp.name}" overwrite="true">
		         	    <fileset dir="${dest.dir}">
		       	    	</fileset>
				 </copy>
		</target>
	<target name="copy-war">
		   <echo message="delete existing files if any"/>
		   <delete dir="${war.target.dir}/${webapp.name}.war" failonerror="false"/>
		   <delete dir="${war.target.dir}/${webapp.name}"  failonerror="false"/>
		   <echo message="deleted existing contents .. copy in new contents"/>	
		   <copy file="${dest.war.dir}/${ant.project.name}.war" tofile="${war.target.dir}/${webapp.name}.war" overwrite="true" />
	</target>
	<target name="copy-war-dev">
		<echo message="Copying war to tomcat host"/>
			   <scp todir="vv_user:vv7463@TTG-DEV-APP-04:/home/vv_user/temp" failonerror="false" verbose="false"  trust="yes">
			   	<fileset dir="${dest.war.dir}">
				  <include name="**/*.war" /> 
				</fileset>
			   	</scp>
		<!--
		<echo message="stopping tomcat 5080"/>
			<sshexec host="TTG-DEV-APP-04"
									  username="vv_user"
									  password="vv7463"
									  trust="yes"
									  command="/usr/local/tomcat5080/bin/shutdown.sh"
									/>
			<echo message="delete existing files if any ${webapp.name}"/>
			<sshexec host="TTG-DEV-APP-04"
			  username="vv_user"
			  password="vv7463"
			  trust="yes"
			  command="rm -f ${war.target.dir}/${webapp.name}.war"
			/>
			<sshexec host="TTG-DEV-APP-04"
			  username="vv_user"
			  password="vv7463"
			  trust="yes"
			  command="rm -rf ${war.target.dir}/${webapp.name}"
			/>
		   <echo message="deleted existing contents .. copy in new contents"/>
			<sshexec host="TTG-DEV-APP-04"
					  username="vv_user"
					  password="vv7463"
					  trust="yes"
					  command="cp /home/vv_user/${ant.project.name}.war ${war.target.dir}/${webapp.name}.war"
					/>
			<echo message="starting tomcat 5080"/>
			<sshexec host="TTG-DEV-APP-04"
							  username="vv_user"
							  password="vv7463"
							  trust="yes"
							  command="/usr/local/tomcat5080/bin/startup.sh"
							/>
			-->
		</target>
		
	<target name="copy-war-qa">
		<echo message="Copying war to tomcat host"/>
				   <scp todir="vv_user:vv7463@TTG-QA-APP-03:/home/vv_user/temp" failonerror="false" verbose="false"  trust="yes">
				   	<fileset dir="${dest.war.dir}">
					  <include name="**/*.war" /> 
					</fileset>
				   	</scp>
		<!--
				<echo message="stopping tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
										  username="vv_user"
										  password="vv7463"
										  trust="yes"
										  command="/usr/local/tomcat5080/bin/shutdown.sh"
										/>
				<echo message="delete existing files if any ${webapp.name}"/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="rm -f ${war.target.dir}/${webapp.name}.war"
				/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="rm -rf ${war.target.dir}/${webapp.name}"
				/>
			   <echo message="deleted existing contents .. copy in new contents"/>
				<sshexec host="TTG-QA-APP-03"
						  username="vv_user"
						  password="vv7463"
						  trust="yes"
						  command="cp /home/vv_user/${ant.project.name}.war ${war.target.dir}/${webapp.name}.war"
						/>
				<echo message="starting tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
								  username="vv_user"
								  password="vv7463"
								  trust="yes"
								  command="/usr/local/tomcat5080/bin/startup.sh"
								/>
			<sleep seconds="30"/>
			   <sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="cp /home/vv_user/configurationmember.properties /usr/local/tomcat5080/webapps/videovisit/WEB-INF/classes/configuration.properties"
				/>
				<echo message="stopping tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="/usr/local/tomcat5080/bin/shutdown.sh"
				/>
				<echo message="starting tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="/usr/local/tomcat5080/bin/startup.sh"
				/>
				-->
			</target>
	<!-- ************************************************ -->
	   		<!-- Start of deploy			  -->
	   		<!-- ************************************************ -->

	<target name="build-webservice" >	
		<ant antfile="${buildtool_location}/build-client.xml" target="deployClient" inheritall="false">
			<property name="runtime.ws.lib.dir" value="${dir.lib}" ></property>
			<property name="ws-client.jarname" value="${videovisit_member_jarname}"></property>
			<property name="ws-client.packagename" value="${videovisit_member_package_name}"></property>
			<property name="ws-client.endpoint" value="${videovisit_member_endpoint}"></property>
		</ant>
		
		
		<echo message="-----copy jar files that web service client runtime depends-----"></echo>
		<ant antfile="${buildtool_location}/build-client.xml" target="deployDependencies" inheritall="false">
			<property name="runtime.ws.lib.dir" value="${dir.lib}" ></property>
		</ant>
		
	</target>

</project>



