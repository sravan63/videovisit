
<!-- ant reg  builds application war for regular mode --> 
<!-- ant sim  builds application war for simulation  mode -->
<!-- ant local  builds application war for local development  windows desktop mode -->
<!-- ant local-exp  builds application  and deploys expanded war for local development  windows desktop mode -->


<project name="videovisitmember" basedir="." default="local">
   <property file="${basedir}/build.properties" />
   <property name="src.dir" value="src" />
   <property name="conf.dir" value="conf" />
   <property name="docroot.dir" value="docroot" />
   <property name="build.dir" value="build" />
   <property name="dest.dir" value="build/${ant.project.name}" />
   <property name="dest.war.dir" value="build/war" />
   <property name="dir.lib" value="${basedir}/lib" />
   <property name="dest.dir.classes" value="${dest.dir}/WEB-INF/classes" />
   <property name="dest.dir.lib" value="${dest.dir}/WEB-INF/lib" />
   <property name="dest.dir.vidyoplayer" value="${dest.dir}/vidyoplayer" />
   <property name="vidyoplayer.home" value="${vidyoplayer_location}"/>
   <property name="vidyoplayer.dest.main.config.file" value="${dest.dir.vidyoplayer}/scripts/main.config.js"/>
   <property name="vidyoplayer.src.main.config.file" value="${vidyoplayer.home}/scripts/main.config.js"/>
   <property name="vidyoplayer.qa.soap.proxy" value="https://ttg-apps-qa.kp.org/soap_proxy.php"/>
   <property name="vidyoplayer.qa.http.soap.proxy" value="http://ttg-apps-qa.kp.org/soap_proxy.php"/>
   <property name="vidyoplayer.pp.soap.proxy" value="https://mydoctor-pp.kaiserpermanente.org/soap_proxy.php"/>
   <property name="vidyoplayer.pr.soap.proxy" value="https://mydoctor.kaiserpermanente.org/soap_proxy.php"/>
   <property name="vidyoplayer.http.thvid2.soap.userservice.path" value="http://thvid2.kp.org/services/v1_1/VidyoPortalUserService?wsdl"/>
   <property name="vidyoplayer.thvid2.soap.userservice.path" value="https://thvid2.kp.org/services/v1_1/VidyoPortalUserService?wsdl"/>
   <property name="vidyoplayer.videohealth.soap.userservice.path" value="https://videohealth.kp.org/services/v1_1/VidyoPortalUserService?wsdl"/>
   <property name="vidyoplayer.config.soap.proxy.url.name" value="soapProxyURL"/>
   <property name="vidyoplayer.config.soap.userservice.path.name" value="soapUserServicePath"/>
 	
	<taskdef resource="net/sf/antcontrib/antlib.xml">
	      <classpath>
	        <pathelement location="../ant-script-library/lib/ant-contrib/ant-contrib-1.0b3.jar"/>
	      	<!--<pathelement location="/usr/local.packages/apache-ant-1.7.1/lib/ant-contrib-1.0b3.jar"/>-->
	      </classpath>
	</taskdef>
	
    <!-- 
	<taskdef name="jsmin"
		        classname="net.matthaynes.jsmin.JSMin_Task"
		        classpath="${dir.lib}/jsmin.0.2.3.jar"/>
	-->	        
		        
	
   <path id="build.class.path">
      <fileset dir="${dir.lib}">
         <include name="*.jar" />
      </fileset>
   	</path>
  
	<!--Set env property for vidyoplayer config-->   	   
    <condition property="do.qa">            
    	<or>
    		<equals arg1="${build.env}" arg2="dv"/>
    		<equals arg1="${build.env}" arg2="qa" />           
        </or>        	
    </condition>
    <condition property="do.pp">
        <equals arg1="${build.env}" arg2="pp" />	        	
    </condition>
	<condition property="do.pr">
        <equals arg1="${build.env}" arg2="pr"/>
    </condition>
	
	<target name="local">
		<sleep seconds="120"/>
		<antcall target="assemble" />
	  	<antcall target="build-war" />
		
		<if>
			<equals arg1="${build.env}" arg2="dv"/>
			<then>
   	  			<antcall target="copy-war-dev" />
			</then>
			 <elseif>
				  <equals arg1="${build.env}" arg2="tr"/>
				  <then>
						<antcall target="copy-war-tr" />
						<echo message="Manually Copy the jar file to /extra/ttg.tomcat5080" />
				  </then>
			 </elseif>
			<else>
				<antcall target="copy-war-qa" />
			</else>
		</if>
   </target>
	
	
	
	<target name="assemble">
		  <property name="ffile" value="conf/filters/${build.env}/configuration.properties" />
	      <property file="${ffile}" />
	      <echo message="using filter -> ${ffile}" />
	      <antcall target="clean" />
		  <antcall target="build-webservice"></antcall>
	      <antcall target="prepare" />
	      <antcall target="compile" />
   </target>
	
	
	
   <target name="clean">
      <delete dir="${build.dir}" />
   	</target>

	<target name="prepare">
		<filter filtersfile="${ffile}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${dest.war.dir}" />
    	<mkdir dir="${dest.dir.classes}" />
 	 	<mkdir dir="${dest.dir.lib}" />
	    <mkdir dir="${dest.dir.vidyoplayer}"/>
   	  	<!--<copy file="${conf.dir}/log4j.properties"
   	            todir="${dest.dir.classes}"
   	            filtering="true" />-->
   		<copy file="${conf.dir}/project.init.properties"
   	   	            todir="${dest.dir.classes}"
   	   	            filtering="true" />
   		<echo message="======Config file=====- ${ffile}" />
	   	<copy file="${ffile}"
			todir="${dest.dir.classes}"
	 		filtering="true" />
	   	
	   	<copy todir="${dest.dir.lib}">
	      	         <fileset dir="${dir.lib}">
	      	         	<exclude name="j2ee.jar"/>
	      	         </fileset>
	       </copy>
		<!--Copy Vidyoplayer to war-->
	   	<echo message="copying vidyoplayer to war from ${vidyoplayer.home} on ${build.env}" />
	   	<copy todir="${dest.dir.vidyoplayer}">
	   		<fileset dir="${vidyoplayer.home}" includes="**"/>      	    
	    </copy>
	    <copy todir="${dest.dir}">
         	    <fileset dir="${docroot.dir}">
         	    	<exclude name="${docroot.dir}/WEB-INF/classes/*"/>
         	    	<exclude name="${docroot.dir}/js/*"/>         	    	
         	    	<exclude name="${docroot.dir}/css/*"/>         	    	
         	    	<exclude name="${docroot.dir}/images/*"/>
         	    	<exclude name="**/deprecated/**"/>
       	    	</fileset>
         </copy>
	   	<!-- Minify JavaScript files -->
	   	<!--
	   	<jsmin force="true">
	   	       <fileset dir="${dest.dir}/assets/js/" includes="**/*.js"/>
	   	</jsmin>
	   	-->
   </target>
   
	<target name="modify-vidyo-Config" depends="set-qa-config,set-pp-config,set-pr-config" ></target>
			
	<!--Targets to modify soap proxy and user service paths according to build env-->
	<target name="set-qa-config" if="do.qa">
		<echo message="${build.env} -> before replacing soapProxyURL and soapUserServicePath in ${vidyoplayer.dest.main.config.file} from ${vidyoplayer.src.main.config.file}" />
	   	<copy file="${vidyoplayer.src.main.config.file}" tofile="${vidyoplayer.dest.main.config.file}" filtering="true" overwrite="true" verbose="true">
	   		<filterchain>
	   		  <tokenfilter>
	   		    <replaceregex pattern="${vidyoplayer.config.soap.proxy.url.name}[ \t]*:.*$"
	   		            replace="${vidyoplayer.config.soap.proxy.url.name}: &quot;${vidyoplayer.qa.soap.proxy}&quot;,"/>
	   		 	<replaceregex pattern="${vidyoplayer.config.soap.userservice.path.name}[ \t]*:.*$"
	   		 	   		replace="${vidyoplayer.config.soap.userservice.path.name}: &quot;${vidyoplayer.thvid2.soap.userservice.path}&quot;,"/>
	   		  </tokenfilter>
	   		</filterchain>
	   	</copy>   
	    <echo message="${build.env} -> after replacing soapProxyURL and soapUserServicePath in ${vidyoplayer.dest.main.config.file} from ${vidyoplayer.src.main.config.file}" />
	</target>
	
	<target name="set-pp-config" if="do.pp">
		<echo message="${build.env} -> before replacing soapProxyURL and soapUserServicePath in ${vidyoplayer.dest.main.config.file} from ${vidyoplayer.src.main.config.file}" />
	   	<copy file="${vidyoplayer.src.main.config.file}" tofile="${vidyoplayer.dest.main.config.file}" filtering="true" overwrite="true" verbose="true">
	   		<filterchain>
	   		  <tokenfilter>
	   		    <replaceregex pattern="${vidyoplayer.config.soap.proxy.url.name}[ \t]*:.*$"
	   		            replace="${vidyoplayer.config.soap.proxy.url.name}: &quot;${vidyoplayer.pp.soap.proxy}&quot;,"/>
	   		 	<replaceregex pattern="${vidyoplayer.config.soap.userservice.path.name}[ \t]*:.*$"
	   		 	   		replace="${vidyoplayer.config.soap.userservice.path.name}: &quot;${vidyoplayer.thvid2.soap.userservice.path}&quot;,"/>
	   		  </tokenfilter>
	   		</filterchain>
	   	</copy>   
	    <echo message="${build.env} -> after replacing soapProxyURL and soapUserServicePath in ${vidyoplayer.dest.main.config.file} from ${vidyoplayer.src.main.config.file}" />
    </target>
	
	<target name="set-pr-config" if="do.pr">
		<echo message="${build.env} -> before replacing soapProxyURL and soapUserServicePath in ${vidyoplayer.dest.main.config.file} from ${vidyoplayer.src.main.config.file}" />
	   	<copy file="${vidyoplayer.src.main.config.file}" tofile="${vidyoplayer.dest.main.config.file}" filtering="true" overwrite="true" verbose="true">
	   		<filterchain>
	   		  <tokenfilter>
	   		    <replaceregex pattern="${vidyoplayer.config.soap.proxy.url.name}[ \t]*:.*$"
	   		            replace="${vidyoplayer.config.soap.proxy.url.name}: &quot;${vidyoplayer.pr.soap.proxy}&quot;,"/>
	   		 	<replaceregex pattern="${vidyoplayer.config.soap.userservice.path.name}[ \t]*:.*$"
	   		 	   		replace="${vidyoplayer.config.soap.userservice.path.name}: &quot;${vidyoplayer.videohealth.soap.userservice.path}&quot;,"/>
	   		  </tokenfilter>
	   		</filterchain>
	   	</copy>   
	    <echo message="${build.env} -> after replacing soapProxyURL and soapUserServicePath in ${vidyoplayer.dest.main.config.file} from ${vidyoplayer.src.main.config.file}" />
   </target>
	
	<!-- ************************************************ -->
	<!-- Start of compile				  -->
	<!-- ************************************************ -->
   <target name="compile" depends="modify-vidyo-Config">
      <javac srcdir="src" 
      		destdir="${dest.dir.classes}" 
      		debug="on">

			<!-- *** LINT ***
         	<compilerarg value="-Xlint:unchecked" />
			-->
          <classpath refid="build.class.path" />
      </javac>
   	<!--
      <jar destfile="${dest.dir}/${ant.project.name}.jar">
         <fileset dir="${dest.dir.classes}" />
      </jar>
      -->
   </target>
   	<!-- ************************************************ -->
   		<!-- Start of build-war				  -->
   		<!-- ************************************************ -->
   	   <target name="build-war">
   	     	      <jar destfile="${dest.war.dir}/${ant.project.name}.war">
   	     <!--    <fileset dir="${dest.dir}">
   	            <include name="*.jar" />
   	         </fileset> -->
     	    <fileset dir="${dest.dir}"/>
   	      </jar>
   </target>
	
	
	<target name="copy-war-dev">
		<echo message="Copying war to tomcat host"/>
			   <scp todir="vv_user:vv7463@TTG-DV-APP-1:/home/vv_user/temp" failonerror="false" verbose="false"  trust="yes">
			   	<fileset dir="${dest.war.dir}">
				  <include name="**/*.war" /> 
				</fileset>
			   	</scp>
		<!--
		<echo message="stopping tomcat 5080"/>
			<sshexec host="TTG-DEV-APP-04"
									  username="vv_user"
									  password="vv7463"
									  trust="yes"
									  command="/usr/local/tomcat5080/bin/shutdown.sh"
									/>
			<echo message="delete existing files if any ${webapp.name}"/>
			<sshexec host="TTG-DEV-APP-04"
			  username="vv_user"
			  password="vv7463"
			  trust="yes"
			  command="rm -f ${war.target.dir}/${webapp.name}.war"
			/>
			<sshexec host="TTG-DEV-APP-04"
			  username="vv_user"
			  password="vv7463"
			  trust="yes"
			  command="rm -rf ${war.target.dir}/${webapp.name}"
			/>
		   <echo message="deleted existing contents .. copy in new contents"/>
			<sshexec host="TTG-DEV-APP-04"
					  username="vv_user"
					  password="vv7463"
					  trust="yes"
					  command="cp /home/vv_user/${ant.project.name}.war ${war.target.dir}/${webapp.name}.war"
					/>
			<echo message="starting tomcat 5080"/>
			<sshexec host="TTG-DEV-APP-04"
							  username="vv_user"
							  password="vv7463"
							  trust="yes"
							  command="/usr/local/tomcat5080/bin/startup.sh"
							/>
			-->
		</target>
		
	<target name="copy-war-qa">
		<echo message="Copying war to tomcat host"/>
				   <scp todir="vv_user:vv7463@TTG-QA-APP-3.har.ca.kp.org:/home/vv_user/temp" failonerror="false" verbose="false"  trust="yes">
				   	<fileset dir="${dest.war.dir}">
					  <include name="**/*.war" /> 
					</fileset>
				   	</scp>
		<!--
				<echo message="stopping tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
										  username="vv_user"
										  password="vv7463"
										  trust="yes"
										  command="/usr/local/tomcat5080/bin/shutdown.sh"
										/>
				<echo message="delete existing files if any ${webapp.name}"/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="rm -f ${war.target.dir}/${webapp.name}.war"
				/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="rm -rf ${war.target.dir}/${webapp.name}"
				/>
			   <echo message="deleted existing contents .. copy in new contents"/>
				<sshexec host="TTG-QA-APP-03"
						  username="vv_user"
						  password="vv7463"
						  trust="yes"
						  command="cp /home/vv_user/${ant.project.name}.war ${war.target.dir}/${webapp.name}.war"
						/>
				<echo message="starting tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
								  username="vv_user"
								  password="vv7463"
								  trust="yes"
								  command="/usr/local/tomcat5080/bin/startup.sh"
								/>
			<sleep seconds="30"/>
			   <sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="cp /home/vv_user/configurationmember.properties /usr/local/tomcat5080/webapps/videovisit/WEB-INF/classes/configuration.properties"
				/>
				<echo message="stopping tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="/usr/local/tomcat5080/bin/shutdown.sh"
				/>
				<echo message="starting tomcat 5080"/>
				<sshexec host="TTG-QA-APP-03"
				  username="vv_user"
				  password="vv7463"
				  trust="yes"
				  command="/usr/local/tomcat5080/bin/startup.sh"
				/>
				-->
			</target>
			
	
	<target name="copy-war-tr">
		<echo message="Copying war to training host"/>
		<scp todir="W992736:ttg123@TTG-TR-APP-4:/extra/ttg.workspace/videovisit-member" failonerror="false" verbose="false"  trust="yes">
			<fileset dir="${dest.war.dir}">
				<include name="**/*.war" /> 
			</fileset>
		</scp>
	</target>
	<!-- ************************************************ -->
	   		<!-- Start of deploy			  -->
	   		<!-- ************************************************ -->

	<target name="build-webservice" >	
		<ant antfile="${buildtool_location}/build-client.xml" target="deployClient" inheritall="false">
			<property name="runtime.ws.lib.dir" value="${dir.lib}" ></property>
			<property name="ws-client.jarname" value="${videovisit_member_jarname}"></property>
			<property name="ws-client.packagename" value="${videovisit_member_package_name}"></property>
			<property name="ws-client.endpoint" value="${videovisit_member_endpoint}"></property>
			<property name="ws-client.wsdlversion" value="1"></property>
			<property name="ws-client.databinding" value="adb"></property>
			<property name="wsas.home" value="${wsas_home}"></property>			
		</ant>
		
		
		<echo message="-----copy jar files that web service client runtime depends-----"></echo>
		<ant antfile="${buildtool_location}/build-client.xml" target="deployDependencies" inheritall="false">
			<property name="runtime.ws.lib.dir" value="${dir.lib}" ></property>
			<property name="wsas.home" value="${wsas_home}"></property>
		</ant>
		
	</target>

</project>



