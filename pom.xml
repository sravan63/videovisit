<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.kp.tpmg.ttg</groupId>
		<artifactId>kp-parent-pom</artifactId>
		<version>1.1.0</version>
	</parent>

	<groupId>org.kp.tpmg.ttg.videovisit</groupId>
	<artifactId>videovisitmember</artifactId>
	<version>5.0.0</version>
	<packaging>war</packaging>

	<properties>
		<vvmeetingservice-clientVersion>1.0.0</vvmeetingservice-clientVersion>
		<spring.version>4.3.1.RELEASE</spring.version>
		<apachetiles.version>3.0.5</apachetiles.version>
		<slf4j.version>1.7.25</slf4j.version>
		<vvservice-clientVersion>4.6.0</vvservice-clientVersion>
		<frontend-plugin.version>0.0.27</frontend-plugin.version>
		<node.version>v10.13.0</node.version>
		<npm.version>6.12.0</npm.version>
		<junit.jupiter.version>5.5.2</junit.jupiter.version>
		<junit.platform.version>1.5.2</junit.platform.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
	</properties>

	<scm>
		<connection>scm:git:git@TTGSSDV0VRHCM01.TTGTPMG.NET:tpmg/videovisit/member-facing/videovisit-member-webapp.git</connection>
		<developerConnection>scm:git:git@TTGSSDV0VRHCM01.TTGTPMG.NET:tpmg/videovisit/member-facing/videovisit-member-webapp.git</developerConnection>
		<tag>v5.0.0</tag>
	</scm>

	<!-- dependencies needed during compile time -->
	 <dependencies>
	<!--	<dependency>
			<groupId>org.kp.tpmg.ttg.videovisit</groupId>
			<artifactId>videovisitsapi-client</artifactId>
			<version>${vvservice-clientVersion}</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency> -->
		
		<dependency>
			<groupId>org.kp.tpmg.ttg.videovisit</groupId>
			<artifactId>videovisitsecapi-client</artifactId>
			<version>2.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.kp.tpmg.ttg.videovisit</groupId>
			<artifactId>videovisitsmappointmentapi-client</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.kp.tpmg.ttg.videovisit</groupId>
			<artifactId>videovisitsintegrationapi-client</artifactId>
			<version>2.0.0</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.kp.tpmg.ttg.videovisit</groupId>
			<artifactId>videovisitsmconferenceapi-client</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.kp.tpmg.ttg.videovisit</groupId>
			<artifactId>videovisitsmeetingapi-client</artifactId>
			<version>${vvmeetingservice-clientVersion}</version>
		</dependency>
		<!-- to address org.kp.ttg.sharedservice.client missing -->
		<dependency>
			<groupId>org.kp.sharedservices.restclient</groupId>
			<artifactId>MemberSSOAuthRestClient</artifactId>
			<version>1.1.0</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- to address org.json missing -->
		<dependency>
			<groupId>org.codeartisans</groupId>
			<artifactId>org.json</artifactId>
			<version>20131017</version>
		</dependency>
		<!-- to address ackage javax.servlet.http does not exist -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<!-- to address package org.apache.log4j does not exist -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- to address package org.apache.commons.lang does not exist -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- to address net.sourceforge.wurfl.core -->
		<dependency>
			<groupId>net.sourceforge.wurfl</groupId>
			<artifactId>wurfl</artifactId>
			<version>1.5.2</version>
		</dependency>
		<!-- to address net.sf.json -->
		<!-- check with ranjeet why we need jdk15 version of this artifact -->
		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<version>2.3</version>
			<classifier>jdk15</classifier>
		</dependency>
		<!-- slf4j-log4j12 API -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- to address ackage org.springframework.beans.factory -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- Apache Tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>${apachetiles.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>${apachetiles.version}</version>
		</dependency>
		<!-- to address com.google.gson -->		
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		<!-- to address package org.apache.commons.httpclient does not exist -->
		<dependency>
			<groupId>commons-httpclient.wso2</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1.0.wso2v1</version>
			<exclusions>
				<exclusion>
					<groupId>commons-httpclient</groupId>
					<artifactId>commons-httpclient</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Dynamic Property Loader API -->
		<dependency>
			<groupId>org.kp.tpmg.ttg.common</groupId>
			<artifactId>dynamicpropertyloader</artifactId>
			<version>1.0.1</version>
			<exclusions>
				<exclusion>
					<artifactId>sqljdbc4</artifactId>
					<groupId>com.microsoft.sqlserver</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.6</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.10.5</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.10.5</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.9</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>4.2.3.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.10.5</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.9.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.jmockit/jmockit -->
		<dependency>
			<groupId>org.jmockit</groupId>
			<artifactId>jmockit</artifactId>
			<version>1.48</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build_argument>run build</build_argument>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<build_argument>run build-dev</build_argument>
			</properties>
		</profile>
	</profiles>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>

		<plugins>
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>1.0-m5.1</version>
				<configuration>
					<squash>true</squash>
					<scmCommentPrefix>[RELEASE]</scmCommentPrefix>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<argLine>
						-javaagent:"${settings.localRepository}"/org/jmockit/jmockit/1.48/jmockit-1.48.jar
					</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>wurfl.uploaded</groupId>
									<artifactId>wurfl</artifactId>
									<version>1.0</version>
									<type>zip</type>
									<destFileName>wurfl.zip</destFileName>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- React -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontend-plugin.version}</version>
				<configuration>
					<workingDirectory>${basedir}/docroot/react/</workingDirectory>
					<nodeDownloadRoot>https://nodejs.org/dist/</nodeDownloadRoot>
					<nodeVersion>${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
					<!-- <installDirectory>.</installDirectory> -->
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<id>npm config</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>config set
								cafile=/appdata/middleware/java11/lib/security/cacerts</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install --strict-ssl=false </arguments>
						</configuration>
					</execution>
					<execution>
						<id>react cli build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<arguments>${build_argument}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<webXml>${basedir}/docroot/WEB-INF/web.xml</webXml>
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestFile>${basedir}/docroot/META-INF/MANIFEST.MF</manifestFile>
						<manifestEntries>
							<version>${project.version}</version>
						</manifestEntries>
					</archive>
					<webResources>
						<resource>
							<directory>${basedir}/docroot</directory>
							<includes>
								<include>**</include>
								<include>static_includes</include>
							</includes>
							<excludes>
								<exclude>WEB-INF/jsp/deprecated/**</exclude>
								<exclude>js/deprecated/**</exclude>
								<exclude>css/deprecated/**</exclude>
								<exclude>react/**</exclude>
							</excludes>
						</resource>
						<resource>
							<directory>${project.build.directory}/lib</directory>
							<includes>
								<include>**</include>
							</includes>
							<targetPath>WEB-INF/lib</targetPath>
						</resource>
						<!-- Added for React -->
						<resource>
							<directory>${basedir}/docroot/react/videovisit/</directory>
							<includes>
								<include>**</include>
							</includes>
							<targetPath>.</targetPath>
						</resource>
					</webResources>
					<packagingExcludes>WEB-INF/lib/not-yet-commons-ssl-0.3.9.jar,WEB-INF/lib/activation-1.1.jar,WEB-INF/lib/aopalliance-1.0.jar,WEB-INF/lib/mail-1.4.jar,WEB-INF/lib/jmx*.jar,WEB-INF/lib/jms*.jar</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<preparationGoals>jacoco:prepare-agent verify jacoco:report
						-Dsonar.host.url=http://ttgssdv0vrhmt01.ttgtpmg.net:9000
						org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar</preparationGoals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.3</version>
				<configuration>
					<destFile>${project.build.directory}/coverage-reports/jacocounit.exec</destFile>
					<dataFile>${project.build.directory}/coverage-reports/jacocounit.exec</dataFile>
				</configuration>
				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
